//
// Generated file, do not edit! Created by opp_msgc 4.3 from applications/httptools/HttpEventMessages.msg.
//

#ifndef _HTTPEVENTMESSAGES_M_H_
#define _HTTPEVENTMESSAGES_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API 
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API 
#  endif
#endif



/**
 * Class generated from <tt>applications/httptools/HttpEventMessages.msg</tt> by opp_msgc.
 * <pre>
 * packet HttpServerStatusUpdateMsg
 * {
 *     @omitGetVerb(true);
 *     string www;             
 *     simtime_t setTime;      
 *     int eventKind;          
 *     double pvalue;          
 *     double pamortize;       
 * }
 * </pre>
 */
class INET_API HttpServerStatusUpdateMsg : public ::cPacket
{
  protected:
    opp_string www_var;
    simtime_t setTime_var;
    int eventKind_var;
    double pvalue_var;
    double pamortize_var;

  private:
    void copy(const HttpServerStatusUpdateMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HttpServerStatusUpdateMsg&);

  public:
    HttpServerStatusUpdateMsg(const char *name=NULL, int kind=0);
    HttpServerStatusUpdateMsg(const HttpServerStatusUpdateMsg& other);
    virtual ~HttpServerStatusUpdateMsg();
    HttpServerStatusUpdateMsg& operator=(const HttpServerStatusUpdateMsg& other);
    virtual HttpServerStatusUpdateMsg *dup() const {return new HttpServerStatusUpdateMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * www() const;
    virtual void setWww(const char * www);
    virtual simtime_t setTime() const;
    virtual void setSetTime(simtime_t setTime);
    virtual int eventKind() const;
    virtual void setEventKind(int eventKind);
    virtual double pvalue() const;
    virtual void setPvalue(double pvalue);
    virtual double pamortize() const;
    virtual void setPamortize(double pamortize);
};

inline void doPacking(cCommBuffer *b, HttpServerStatusUpdateMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, HttpServerStatusUpdateMsg& obj) {obj.parsimUnpack(b);}


#endif // _HTTPEVENTMESSAGES_M_H_
