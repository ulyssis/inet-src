//
// Generated file, do not edit! Created by opp_msgc 4.3 from networklayer/manetrouting/gpsr/GpsrHello.msg.
//

#ifndef _GPSRHELLO_M_H_
#define _GPSRHELLO_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API 
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API 
#  endif
#endif

// cplusplus {{
#include "IPv4Address.h"
#include "Coord.h"
// }}



/**
 * Class generated from <tt>networklayer/manetrouting/gpsr/GpsrHello.msg</tt> by opp_msgc.
 * <pre>
 * packet GpsrHello
 * {
 * 	IPv4Address myAddress;
 * 	IPv4Address DstAddress;
 * 	Coord MyPos;
 * }
 * </pre>
 */
class INET_API GpsrHello : public ::cPacket
{
  protected:
    IPv4Address myAddress_var;
    IPv4Address DstAddress_var;
    Coord MyPos_var;

  private:
    void copy(const GpsrHello& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GpsrHello&);

  public:
    GpsrHello(const char *name=NULL, int kind=0);
    GpsrHello(const GpsrHello& other);
    virtual ~GpsrHello();
    GpsrHello& operator=(const GpsrHello& other);
    virtual GpsrHello *dup() const {return new GpsrHello(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual IPv4Address& getMyAddress();
    virtual const IPv4Address& getMyAddress() const {return const_cast<GpsrHello*>(this)->getMyAddress();}
    virtual void setMyAddress(const IPv4Address& myAddress);
    virtual IPv4Address& getDstAddress();
    virtual const IPv4Address& getDstAddress() const {return const_cast<GpsrHello*>(this)->getDstAddress();}
    virtual void setDstAddress(const IPv4Address& DstAddress);
    virtual Coord& getMyPos();
    virtual const Coord& getMyPos() const {return const_cast<GpsrHello*>(this)->getMyPos();}
    virtual void setMyPos(const Coord& MyPos);
};

inline void doPacking(cCommBuffer *b, GpsrHello& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, GpsrHello& obj) {obj.parsimUnpack(b);}


#endif // _GPSRHELLO_M_H_
