//
// Generated file, do not edit! Created by opp_msgc 4.3 from networklayer/bgpv4/BGPMessage/BGPASPathSegment.msg.
//

#ifndef _BGPASPATHSEGMENT_M_H_
#define _BGPASPATHSEGMENT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API 
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API 
#  endif
#endif



/**
 * Enum generated from <tt>networklayer/bgpv4/BGPMessage/BGPASPathSegment.msg</tt> by opp_msgc.
 * <pre>
 * enum BGPPathSegmentType
 * {
 *     AS_SET = 1;
 *     AS_SEQUENCE = 2;
 * }
 * </pre>
 */
enum BGPPathSegmentType {
    AS_SET = 1,
    AS_SEQUENCE = 2
};

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPASPathSegment.msg</tt> by opp_msgc.
 * <pre>
 * class BGPASPathSegment
 * {
 *     unsigned char type @enum(BGPPathSegmentType);
 *     unsigned char length;
 *     unsigned short asValue[];
 * }
 * </pre>
 */
class INET_API BGPASPathSegment : public ::cObject
{
  protected:
    unsigned char type_var;
    unsigned char length_var;
    unsigned short *asValue_var; // array ptr
    unsigned int asValue_arraysize;

  private:
    void copy(const BGPASPathSegment& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPASPathSegment&);

  public:
    BGPASPathSegment();
    BGPASPathSegment(const BGPASPathSegment& other);
    virtual ~BGPASPathSegment();
    BGPASPathSegment& operator=(const BGPASPathSegment& other);
    virtual BGPASPathSegment *dup() const {return new BGPASPathSegment(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned char getType() const;
    virtual void setType(unsigned char type);
    virtual unsigned char getLength() const;
    virtual void setLength(unsigned char length);
    virtual void setAsValueArraySize(unsigned int size);
    virtual unsigned int getAsValueArraySize() const;
    virtual unsigned short getAsValue(unsigned int k) const;
    virtual void setAsValue(unsigned int k, unsigned short asValue);
};

inline void doPacking(cCommBuffer *b, BGPASPathSegment& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPASPathSegment& obj) {obj.parsimUnpack(b);}


#endif // _BGPASPATHSEGMENT_M_H_
